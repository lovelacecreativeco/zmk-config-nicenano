/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MITsssSSSS
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    macros {
        picked: picked {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp KP_NUMBER_5 &kp RIGHT>;
            label = "PICKED";
        };

        unpicked: unpicked {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp KP_NUMBER_0 &kp RIGHT_ARROW>;
            label = "UNPICKED";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | RET |   | SPC | RSE  | ALT |

            bindings = <
&kp TAB         &kp Q         &kp W  &kp E     &kp R      &kp T    &kp Y  &kp U      &kp I     &kp O      &kp P       &kp BSPC
&kp LEFT_SHIFT  &kp A         &kp S  &kp D     &kp F      &kp G    &kp H  &kp J      &kp K     &kp L      &kp SEMI    &kp SQT
&kp LCTRL       &kp LEFT_ALT  &kp Z  &kp X     &kp C      &kp V    &kp B  &kp N      &kp M     &kp COMMA  &kp PERIOD  &kp SLASH
                                     &kp LGUI  &kp ENTER  &mo 1    &mo 2  &kp SPACE  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | ENT |   | SPC |     | ALT |

            bindings = <
&kp ESC     &kp N1        &kp N2           &kp N3           &kp N4           &kp N5             &kp N6  &kp N7     &kp N8    &kp N9        &kp N0     &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4       &to 0   &to 3      &trans    &kp UP_ARROW  &trans     &trans
&kp LSHFT   &kp LCTRL     &rgb_ug RGB_EFF  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_TOG    &trans  &trans     &kp LEFT  &kp DOWN      &kp RIGHT  &trans
                                           &kp LGUI         &kp RET          &trans             &trans  &kp SPACE  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  {  |  }  | "|" |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  [  |  ]  |  \  |  ~   | // TODO: Fix this row when &mkp is committed
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC    &kp EXCL   &kp AT  &kp HASH  &kp DLLR   &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&trans     &trans     &trans  &trans    &trans     &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp PIPE  &kp GRAVE
&kp LSHFT  &kp LCTRL  &trans  &trans    &trans     &trans       &to 0      &to 3      &trans           &trans    &kp BSLH  &kp TILDE
                              &kp LGUI  &kp ENTER  &trans       &trans     &kp SPACE  &kp RALT
            >;
        };

        photo {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans          &trans     &trans   &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans          &trans     &trans   &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans          &trans     &trans   &trans  &trans  &trans
                        &trans  &trans  &to 1     &kp LEFT_ARROW  &unpicked  &picked
            >;
        };
    };
};
